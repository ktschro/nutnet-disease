setwd("/Users/katieschroeder/Documents/GitHub/nutnet-disease/nutnet-disease")
setwd("/Users/katieschroeder/Documents/GitHub/nutnet-disease")
#loading data and libraries ----
#load in data
ks_disease<-read.csv("Stomata_Data_REU_2019_2.csv")
ps_disease<-read.csv("nutnet_fungus_2019_master.csv")
cover<-read.csv("NutNet_Species_Cover_May30_thru_August.csv")
#load in libraries
library(tidyverse)
str(ks_disease)
levels(ks_disease$plot)
levels(ks_disease)
lapply(ks_disease,levels)
lapply(ks_disease,class)
levels(as.factor(ks_disease$plot))
levels(as.factor(ks_disease$trt))
View(ks_disease)
levels(as.factor(ks_disease$date))
lapply(ks_disease,levels(as.factor))
lapply(ks_disease,levels(as.factor()))
View(ps_disease)
levels(as.factor(ps_disease$date))
levels(as.factor(ps_disease$plot))
levels(as.factor(cover$date))
View(cover)
levels(as.factor(cover$trt))
levels(as.factor(cover$plot))
table(cover)
table(cover$plot)
table(cover$plot,cover$date)
table(cover$plot,cover$julian_day)
cover %>% filter(plot>36) %>% levels(as.factor(trt))
cover %>% filter(plot>36) %>% levels(as.factor(cover$trt))
cover %>% filter(plot>36)
levels(as.factor(ks_disease$plant))
levels(as.factor(ps_disease$plant))
levels(as.factor(ps_disease$full_name))
str(ks_disease)
str(ps_disease)
knitr::opts_chunk$set(echo = TRUE)
#load in data
ks_disease<-read.csv("Stomata_Data_REU_2019_master.csv")
summary(ks_disease)
View(ps_disease)
str(ps_disease)
ps_disease %>%
count(date,species,plot)
ps_disease %>%
count(date,host,plot)
ps_disease summary <-
ps_disease summary <- ps_disease %>%
ps_disease_summary <- ps_disease %>%
count(date,host,plot)
View(ps_disease_summary)
ps_disease_summary_2 <- ps_disease %>%
count(date,host,trt)
View(ps_disease_summary_2)
str(ks_disease)
View(ks_disease)
ks_disease_summary <- ks_disease %>% filter(is.na(fungal))
View(ks_disease_summary)
ks_disease_summary <- ks_disease %>% filter(!is.na(fungal))
View(ks_disease_summary)
View(ps_disease_summary)
ps_disease %>%
count(date,host,plot)
#1-20 replicates per plot per sampling day (most 1-20). Plants were flagged and tracked through time
ps_disease %>%
count(date,host,trt)
ks_disease_summary <- ks_disease %>%
filter(!is.na(fungal)) %>%
count(date,host,trt)
ks_disease_summary <- ks_disease %>%
filter(!is.na(fungal)) %>%
count(date,plant,trt)
ks_disease %>%
filter(!is.na(fungal)) %>%
count(date,plant,trt)
library(ggplot2)
ps_ange <- ps_disease %>% filter(host=="Ange")
ps_agre <- ps_disease %>% filter(host=="Agre")
View(ps_disease)
#make a total fungal column in alex and rachel's data
ps_disease$fungal_old <- ps_disease$old_rust + ps_disease$old_bs
ps_disease$fungal_new <- ps_disease$new_rust + ps_disease$new_bs
ps_ange <- ps_disease %>% filter(host=="Ange")
ps_agre <- ps_disease %>% filter(host=="Agre")
ggerrorplot(ps_ange,x="trt",y="old_fungal",desc_stat="mean_sd",facet.by(date))
library(ggpubr)
ggerrorplot(ps_ange,x="trt",y="old_fungal",desc_stat="mean_sd",facet.by(date))
ggerrorplot(ps_ange,x="trt",y="old_fungal",desc_stat="mean_sd",facet.by = "date")
ps_ange <- ps_disease %>% filter(host=="Ange")
ggerrorplot(ps_ange,x="trt",y="old_fungal",desc_stat="mean_sd",facet.by = "date")
View(ps_ange)
ggerrorplot(ps_ange,x="trt",y="fungal_old",desc_stat="mean_sd",facet.by = "date")
ggerrorplot(ps_ange,x="trt",y="fungal_new",desc_stat="mean_sd",facet.by = "date")
ggerrorplot(ps_ange,x="trt",y="fungal_old",desc_stat="mean_sd",facet.by = "date") + ggpar(ylim=c(0,60))
ange_old<-ggerrorplot(ps_ange,x="trt",y="fungal_old",desc_stat="mean_sd",facet.by = "date")
ggpar(ange_old, ylim=c(0,60))
ps_ange <- ps_disease %>% filter(host=="Ange"&(!is.na(fungal_new))|!is.na(fungal_old))
ggerrorplot(ps_ange,x="trt",y="fungal_old",desc_stat="mean_sd",facet.by = "date")
hist(ps_disease$old_rust)
hist(ps_disease$old_rust,breaks=20)
hist(ps_disease$old_rust,breaks=50)
hist(ps-disease$old_bs,breaks=50)
hist(ps_disease$old_bs,breaks=50)
hist(ps_disease$new_rust,breaks=50)
fct_relevel(ps_disease$trt)
#old rust is most frequently not 0
ps_disease$trt<-factor(ps_disease$trt,levels=c("C","C_H","N1","N5","N10","P","K","PK","NK","NP","NPK","NPK_H"))
ggerrorplot(ps_disease,x="trt",y="old_rust",desc_stat = "mean_sd",facet.by=c("date","host"))
ggerrorplot(ps_disease,x="trt",y="old_rust",desc_stat = "mean_sd",facet.by=c("date","host"))
setwd("/Users/katieschroeder/Documents/GitHub/pbio8250-uga")
#Set working directory
setwd("/Users/katieschroeder/Documents/GitHub/pbio8250-uga")
#Load libraries
#If you don't have these libraries, install first
library(ggplot2)
library(tidyverse)
library(ggpubr)
#Import data and check--------------
penguins <- read.csv("penguins.csv")
#Change 'year' to factor
penguins$year<-as.factor(penguins$year)
#Lab 1
#Question 1: female penguins on Adelie
penguins %>% count(species,island)
#Lab 1
#Question 1: female penguins on Adelie
penguins %>% count(sex,species,island)
#Question 2: average beak depth by species
penguins %>% group_by(species) %>% summarize(mean_bill_depth = mean(bill_depth_mm))
#Question 2: average beak depth by species
penguins %>% group_by(species) %>% summarize(mean_bill_depth = mean(bill_depth_mm,na.rm=T))
penguins %>% filter(year=="2008") %>% ggplot(aes(x=bill_area_mm2)) + geom_histogram(color="black",alpha=0.6)
#Question 3: histogram of penguin bill areas
penguins$bill_area_mm2<-penguins$bill_depth_mm*penguins$bill_length_mm
penguins %>% filter(year=="2008") %>% ggplot(aes(x=bill_area_mm2)) + geom_histogram(color="black",alpha=0.6)
#Question 4:
penguins %>%
filter(sex=="male"|sex=="female") %>%
ggerrorplot(x="species",y="body_mass_g",desc_stat="mean_sd",facet.by="sex")
#Question 4:
penguins %>%
filter(sex=="male"|sex=="female") %>%
ggerrorplot(x="species",y="body_mass_g",desc_stat="mean_sd",facet.by="sex",xlab="Species",ylab="Mean Body Mass (g)")
#Question 4:
penguins %>%
filter(sex=="male"|sex=="female") %>%
ggerrorplot(x="species",y="body_mass_g",desc_stat="mean_sd",facet.by="sex",xlab="Species",ylab="Mean Body Mass (g)",ylim=c(0,5000))
#Question 4:
penguins %>%
filter(sex=="male"|sex=="female") %>%
ggerrorplot(x="species",y="body_mass_g",desc_stat="mean_sd",facet.by="sex",xlab="Species",ylab="Mean Body Mass (g)",ylim=c(0,6000))
#Question 4:
penguins %>%
filter(sex=="male"|sex=="female") %>%
ggerrorplot(x="species",y="body_mass_g",desc_stat="mean_sd",facet.by="sex",xlab="Species",ylab="Mean Body Mass (g)",ylim=c(1000,6000))
#Question 4:
penguins %>%
filter(sex=="male"|sex=="female") %>%
ggerrorplot(x="species",y="body_mass_g",desc_stat="mean_sd",facet.by="sex",xlab="Species",ylab="Mean Body Mass (g)",ylim=c(0,6000))
